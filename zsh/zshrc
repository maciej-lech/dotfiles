## ZSH configuration

# Update PATH
export PATH=$HOME/.local/bin:$PATH

export ZSH="$HOME/.cache/antidote/ohmyzsh/ohmyzsh"

## OMZ configuration
export ZSH_CUSTOM="$HOME/.zsh"

zstyle ':omz:update' mode disabled  # disable automatic updates

# Plugins are installed with antidote
plugins=(
)

## Misc configuration

# Spaceship theme
SPACESHIP_PROMPT_ORDER=(
    jobs          # Background jobs indicator
    exit_code     # Exit code section
    exec_time     # Execution time
    time          # Time stamps section
    user          # Username section
    host          # Hostname section

    git           # Git section (git_branch + git_status)
    # hg            # Mercurial section (hg_branch  + hg_status)

    # vi_mode       # Vi-mode indicator
    venv          # virtualenv section
    # pyenv         # Pyenv section
    # kubectl       # Kubectl context section

    async

    # line_sep      # Line break
    dir           # Current directory section
    char          # Prompt character
)
SPACESHIP_PROMPT_ASYNC="false"
SPACESHIP_PROMPT_ADD_NEWLINE="true"
SPACESHIP_PROMPT_SEPARATE_LINE="false"
SPACESHIP_PROMPT_PREFIXES_SHOW="false"
SPACESHIP_PROMPT_SUFFIXES_SHOW="true"
SPACESHIP_PROMPT_DEFAULT_PREFIX=""
SPACESHIP_PROMPT_DEFAULT_SUFFIX=" "
SPACESHIP_CHAR_SUFFIX=" "
SPACESHIP_GIT_SYMBOL=""
SPACESHIP_EXIT_CODE_SHOW="true"
SPACESHIP_EXIT_CODE_SYMBOL=""

# PyEnv
if [ -d "${HOME}/.pyenv/bin" ]; then
    # export PYENV_VIRTUALENV_DISABLE_PROMPT=1
    export PYENV_ROOT="$HOME/.pyenv"
    export PATH="$PYENV_ROOT/bin:$PATH"
    eval "$(pyenv init -)"
    eval "$(pyenv virtualenv-init -)"
fi

# Golang
if [ -d "${HOME}/go/bin" ]; then
    PATH="${HOME}/go/bin:${HOME}/go/packages/bin${PATH:+:${PATH}}"; export PATH;
    export GOROOT="${HOME}/go"
    export GOPATH="${HOME}/go/packages"
    export GOBIN="${GOPATH}/bin"
    export GOARCH=amd64
    export GOOS=linux
fi

# GNOME Keyring
export SSH_AUTH_SOCK="/run/user/$UID/keyring/ssh"

# Keychain
# if (( $+commands[keychain] )); then
#     eval "$(keychain -q --eval)"
# fi

## Antidote configuration

zstyle ':antidote:bundle' use-friendly-names 'yes'

# Clone antidote if necessary.
[[ -e ${ZDOTDIR:-~}/.antidote ]] ||
  git clone https://github.com/mattmc3/antidote.git ${ZDOTDIR:-~}/.antidote

# Source antidote.
source ${ZDOTDIR:-~}/.antidote/antidote.zsh

# Initialize antidote's dynamic mode, which changes `antidote bundle`
# from static mode.
source <(antidote init)

# Bundle plugins with antidote.
antidote bundle <<EOBUNDLES
    # OMZ framework
    ohmyzsh/ohmyzsh

    # OMZ plugins
    ohmyzsh/ohmyzsh path:plugins/ansible
    ohmyzsh/ohmyzsh path:plugins/command-not-found
    ohmyzsh/ohmyzsh path:plugins/common-aliases
    ohmyzsh/ohmyzsh path:plugins/colored-man-pages
    ohmyzsh/ohmyzsh path:plugins/dircycle
    ohmyzsh/ohmyzsh path:plugins/dotenv
    ohmyzsh/ohmyzsh path:plugins/gcloud
    ohmyzsh/ohmyzsh path:plugins/pip
    ohmyzsh/ohmyzsh path:plugins/poetry
    ohmyzsh/ohmyzsh path:plugins/pyenv
    ohmyzsh/ohmyzsh path:plugins/python
    ohmyzsh/ohmyzsh path:plugins/sudo

    # 3rd party plugins
    zsh-users/zsh-autosuggestions
    zsh-users/zsh-completions
    zsh-users/zsh-syntax-highlighting
    greymd/tmux-xpanes

    # ZSH-Utils plugins
    belak/zsh-utils path:completion
    belak/zsh-utils path:history

    # Theme
    spaceship-prompt/spaceship-prompt
EOBUNDLES

## Local RC file
[ -s "$HOME/.zshrc.local" ] && . "$HOME/.zshrc.local"

# EOF
