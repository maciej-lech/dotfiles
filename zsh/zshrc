## ZSH configuration

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.antigen/bundles/robbyrussell/oh-my-zsh/"

# Append history
setopt incappendhistory

## OS-specific ZSH configuration

case $OSTYPE in
linux*)
    ANTIGEN_ZSH="/usr/share/zsh-antigen/antigen.zsh"
    eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
    ;;
darwin*)
    export PATH=/usr/local/sbin:$PATH
    ANTIGEN_ZSH="/usr/local/share/antigen/antigen.zsh"
    ZSH_DISABLE_COMPFIX="true" # Disable compfix on MacOS
    ;;
esac

# Update PATH
export PATH=$HOME/.local/bin:$PATH

## OMZSH configuration

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
# ZSH_THEME="robbyrussell"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to automatically update without prompting.
DISABLE_UPDATE_PROMPT="true"

# Uncomment the following line to change how often to auto-update (in days).
UPDATE_ZSH_DAYS=7

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
HIST_STAMPS="dd.mm.yyyy"

# Would you like to use another custom folder than $ZSH/custom?
ZSH_CUSTOM="$HOME/.zsh"

# Which plugins would you like to load?
# Standard plugins can be found in ~/.oh-my-zsh/plugins/*
# Custom plugins may be added to ~/.zsh/custom/plugins/
plugins=(
)

# Antigen plugins manager
source $ANTIGEN_ZSH
antigen init ~/.antigenrc

# OMZ
source $ZSH/oh-my-zsh.sh


## User configuration

# Prompt
SPACESHIP_PROMPT_ORDER=(
    jobs          # Background jobs indicator
    exit_code     # Exit code section
    exec_time     # Execution time
    time          # Time stamps section
    user          # Username section
    host          # Hostname section

    git           # Git section (git_branch + git_status)
    hg            # Mercurial section (hg_branch  + hg_status)
    package       # Package version
    golang        # Go section

    vi_mode       # Vi-mode indicator
    docker        # Docker section
    aws           # Amazon Web Services section
    venv          # virtualenv section
    # pyenv         # Pyenv section
    kubectl       # Kubectl context section

    # line_sep      # Line break
    dir           # Current directory section
    char          # Prompt character
)
SPACESHIP_PROMPT_ADD_NEWLINE="false"
SPACESHIP_PROMPT_SEPARATE_LINE="false"
SPACESHIP_PROMPT_PREFIXES_SHOW="false"
SPACESHIP_CHAR_SUFFIX=" "
SPACESHIP_GIT_SYMBOL=""
SPACESHIP_EXIT_CODE_SHOW="true"
SPACESHIP_EXIT_CODE_SYMBOL=""

# PyEnv
if (( $+commands[pyenv] )); then
    export PATH="${HOME}/.pyenv/bin:$PATH"
    export PYENV_VIRTUALENV_DISABLE_PROMPT=1
    eval "$(pyenv init -)"
    eval "$(pyenv virtualenv-init -)"
fi

# Golang
if [ -d "${HOME}/go/bin" ]; then
    PATH="${HOME}/go/bin${PATH:+:${PATH}}"; export PATH;
    # export GOROOT="${HOME}/go"
    export GOPATH="${HOME}/go"
    export GOBIN="${GOPATH}/bin"
    export GOARCH=amd64
    export GOOS=linux
fi

# Perl
if [ -d "${HOME}/perl5/bin" ]; then
    PATH="${HOME}/perl5/bin${PATH:+:${PATH}}"; export PATH;
    PERL5LIB="${HOME}/perl5/lib/perl5${PERL5LIB:+:${PERL5LIB}}"; export PERL5LIB;
    PERL_LOCAL_LIB_ROOT="${HOME}/perl5${PERL_LOCAL_LIB_ROOT:+:${PERL_LOCAL_LIB_ROOT}}"; export PERL_LOCAL_LIB_ROOT;
    PERL_MB_OPT="--install_base \"${HOME}/perl5\""; export PERL_MB_OPT;
    PERL_MM_OPT="INSTALL_BASE=${HOME}/perl5"; export PERL_MM_OPT;
fi

# Node.js
export NVM_DIR="$HOME/.nvm"
[ -s "/usr/local/opt/nvm/nvm.sh" ] && . "/usr/local/opt/nvm/nvm.sh"

# Keychain
if (( $+commands[keychain] )); then
    case $OSTYPE in
    linux*)
        eval "$(keychain -q --eval id_ed25519)"
        ;;
    darwin*)
        eval "$(keychain -q --inherit any --eval id_ed25519)"
        ;;
    esac
fi

# Docker-Machine (macOS only)
if (( $+commands[docker-machine] )); then
    eval "$(docker-machine env default)"
fi

# Update PATH
export PATH=$HOME/.local/bin:$PATH

# Local RC file
[ -s "$HOME/.zshrc.local" ] && . "$HOME/.zshrc.local"
